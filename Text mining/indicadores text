{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"indicadores text","provenance":[],"authorship_tag":"ABX9TyNAdgv20T0ubtbnI/NeYDV9"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XIpkC7F3C9Mg","executionInfo":{"status":"ok","timestamp":1645534474036,"user_tz":-60,"elapsed":19647,"user":{"displayName":"miguel Garcia","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08308211240568740600"}},"outputId":"e943bde6-4b75-4f1b-f9c2-090320b61906"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["!pip install googletrans==4.0.0-rc1\n","import googletrans as gt\n","from googletrans import Translator"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AZB0oK9NQCbz","executionInfo":{"status":"ok","timestamp":1644140876993,"user_tz":-60,"elapsed":8802,"user":{"displayName":"miguel Garcia","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08308211240568740600"}},"outputId":"41985c4e-57a2-434f-cec0-6511d4c26416"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting googletrans==4.0.0-rc1\n","  Downloading googletrans-4.0.0rc1.tar.gz (20 kB)\n","Collecting httpx==0.13.3\n","  Downloading httpx-0.13.3-py3-none-any.whl (55 kB)\n","\u001b[K     |████████████████████████████████| 55 kB 3.1 MB/s \n","\u001b[?25hRequirement already satisfied: certifi in /usr/local/lib/python3.7/dist-packages (from httpx==0.13.3->googletrans==4.0.0-rc1) (2021.10.8)\n","Collecting httpcore==0.9.*\n","  Downloading httpcore-0.9.1-py3-none-any.whl (42 kB)\n","\u001b[K     |████████████████████████████████| 42 kB 1.1 MB/s \n","\u001b[?25hCollecting hstspreload\n","  Downloading hstspreload-2021.12.1-py3-none-any.whl (1.3 MB)\n","\u001b[K     |████████████████████████████████| 1.3 MB 54.8 MB/s \n","\u001b[?25hCollecting sniffio\n","  Downloading sniffio-1.2.0-py3-none-any.whl (10 kB)\n","Requirement already satisfied: chardet==3.* in /usr/local/lib/python3.7/dist-packages (from httpx==0.13.3->googletrans==4.0.0-rc1) (3.0.4)\n","Requirement already satisfied: idna==2.* in /usr/local/lib/python3.7/dist-packages (from httpx==0.13.3->googletrans==4.0.0-rc1) (2.10)\n","Collecting rfc3986<2,>=1.3\n","  Downloading rfc3986-1.5.0-py2.py3-none-any.whl (31 kB)\n","Collecting h2==3.*\n","  Downloading h2-3.2.0-py2.py3-none-any.whl (65 kB)\n","\u001b[K     |████████████████████████████████| 65 kB 3.1 MB/s \n","\u001b[?25hCollecting h11<0.10,>=0.8\n","  Downloading h11-0.9.0-py2.py3-none-any.whl (53 kB)\n","\u001b[K     |████████████████████████████████| 53 kB 1.8 MB/s \n","\u001b[?25hCollecting hyperframe<6,>=5.2.0\n","  Downloading hyperframe-5.2.0-py2.py3-none-any.whl (12 kB)\n","Collecting hpack<4,>=3.0\n","  Downloading hpack-3.0.0-py2.py3-none-any.whl (38 kB)\n","Building wheels for collected packages: googletrans\n","  Building wheel for googletrans (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for googletrans: filename=googletrans-4.0.0rc1-py3-none-any.whl size=17416 sha256=d7d4f4a588f85e30d1f55b64a627334a64a9631ce02ccb48f4cab9b57057d117\n","  Stored in directory: /root/.cache/pip/wheels/43/34/00/4fe71786ea6d12314b29037620c36d857e5d104ac2748bf82a\n","Successfully built googletrans\n","Installing collected packages: hyperframe, hpack, sniffio, h2, h11, rfc3986, httpcore, hstspreload, httpx, googletrans\n","Successfully installed googletrans-4.0.0rc1 h11-0.9.0 h2-3.2.0 hpack-3.0.0 hstspreload-2021.12.1 httpcore-0.9.1 httpx-0.13.3 hyperframe-5.2.0 rfc3986-1.5.0 sniffio-1.2.0\n"]}]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CA8wkkhDCrMi","executionInfo":{"status":"ok","timestamp":1644140885719,"user_tz":-60,"elapsed":8739,"user":{"displayName":"miguel Garcia","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08308211240568740600"}},"outputId":"ca04f4bc-8181-44b9-ecfa-2dbb1a3e69cf"},"outputs":[{"output_type":"stream","name":"stdout","text":["[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Unzipping corpora/stopwords.zip.\n","[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Unzipping tokenizers/punkt.zip.\n","[nltk_data] Downloading package wordnet to /root/nltk_data...\n","[nltk_data]   Unzipping corpora/wordnet.zip.\n","[nltk_data] Downloading package averaged_perceptron_tagger to\n","[nltk_data]     /root/nltk_data...\n","[nltk_data]   Unzipping taggers/averaged_perceptron_tagger.zip.\n"]}],"source":["import pandas as pd\n","import numpy as np\n","import tensorflow as tf\n","import matplotlib.pyplot as plt\n","\n","\n","\n","import nltk\n","nltk.download('stopwords')\n","nltk.download('punkt')\n","nltk.download('wordnet')\n","nltk.download('averaged_perceptron_tagger')\n","import sys \n","from gensim.corpora import Dictionary\n","from gensim.models.ldamodel import LdaModel\n","from gensim.models import CoherenceModel\n","from nltk.corpus import stopwords\n","import pandas as pd\n","import re\n","import numpy as np\n","from nltk import word_tokenize, pos_tag\n","import string\n","import spacy \n","\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')\n","\n","import matplotlib as mpl\n","import matplotlib.pyplot as plt\n","import os\n","import re\n","import shutil\n","import string\n","import seaborn as sns\n","import pydot\n","import pandas as pd\n","import numpy as np\n","\n","from collections import Counter\n","\n","import sklearn\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import classification_report\n","from sklearn.preprocessing import OneHotEncoder\n","\n","import tensorflow as tf\n","from tensorflow.keras import regularizers, layers, losses, preprocessing\n","from tensorflow.keras.preprocessing.text import Tokenizer\n","from tensorflow.keras.preprocessing.sequence import pad_sequences"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ocs_4AR7f5vf","executionInfo":{"status":"ok","timestamp":1645534494966,"user_tz":-60,"elapsed":5647,"user":{"displayName":"miguel Garcia","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08308211240568740600"}},"outputId":"d5cb34bd-46ae-4318-f22d-c20aa08f170c"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["r = \"/content/drive/MyDrive/TFM Big Data & BA/Propuestas/Proyecto Final/2 - Text Mining/df_textm.csv\"\n","df = pd.read_csv(r)\n","\n","carimg = pd.read_csv(\"/content/drive/MyDrive/TFM Big Data & BA/Propuestas/Proyecto Final/4 - Deep Learning/Image_Dataset_with_Features_Total.txt\", sep = ',')\n","def nojpg(string):\n","  return string.split('.jpg')[0]\n","\n","carimg.image = carimg.image.apply(nojpg)\n","\n","df = df.merge(carimg, 'left', 'image')\n","\n","df = df[df.n_segments.notna()]\n","df = df[df[\"Titulo\"].notna()]\n","df = df[df[\"Descripcion\"].notna()]\n","\n","img_car = ['n_segments', 'contrast_segments_size',\n","       'ratio_largest_component', 'ratio_second_largest_component',\n","       'segment_hue_1', 'segment_hue_2', 'segment_hue_3', 'segment_bright_1',\n","       'segment_bright_2', 'segment_bright_3', 'n_sift', 'rgb_simple_1',\n","       'rgb_simple_2', 'hsv_simple_1', 'hsv_simple_2', 'hue_hist_1',\n","       'hue_hist_2', 'hue_hist_3', 'gray_simple_1', 'gray_simple_2',\n","       'gray_simple_3', 'sharpness', 'contrast', 'colorful', 'sat_1', 'sat_2',\n","       'sat_3', 'sat_4', 'bright_1', 'bright_2', 'bright_3', 'bright_4']\n","\n","for i in img_car:\n","  df[i] = np.where(df[i]==0, 0.0000000001, df[i])\n","\n","print(df.shape)\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":722},"id":"OjuE-tZ_fki5","executionInfo":{"status":"ok","timestamp":1645534521630,"user_tz":-60,"elapsed":26673,"user":{"displayName":"miguel Garcia","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08308211240568740600"}},"outputId":"190e3fe4-0441-4e73-e782-4812fe6fb713"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["(567466, 53)\n"]},{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-db8b9209-e1eb-4d8e-9b13-9d076e67dc74\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>llave</th>\n","      <th>id</th>\n","      <th>price</th>\n","      <th>user_type</th>\n","      <th>deal_probability</th>\n","      <th>category</th>\n","      <th>subcategory</th>\n","      <th>city</th>\n","      <th>region</th>\n","      <th>image</th>\n","      <th>description</th>\n","      <th>title</th>\n","      <th>population</th>\n","      <th>wage</th>\n","      <th>federal_district</th>\n","      <th>wage_fd</th>\n","      <th>sold</th>\n","      <th>parent_category</th>\n","      <th>Titulo</th>\n","      <th>Descripcion</th>\n","      <th>n_segments</th>\n","      <th>contrast_segments_size</th>\n","      <th>ratio_largest_component</th>\n","      <th>ratio_second_largest_component</th>\n","      <th>segment_hue_1</th>\n","      <th>segment_hue_2</th>\n","      <th>segment_hue_3</th>\n","      <th>segment_bright_1</th>\n","      <th>segment_bright_2</th>\n","      <th>segment_bright_3</th>\n","      <th>n_sift</th>\n","      <th>rgb_simple_1</th>\n","      <th>rgb_simple_2</th>\n","      <th>hsv_simple_1</th>\n","      <th>hsv_simple_2</th>\n","      <th>hue_hist_1</th>\n","      <th>hue_hist_2</th>\n","      <th>hue_hist_3</th>\n","      <th>gray_simple_1</th>\n","      <th>gray_simple_2</th>\n","      <th>gray_simple_3</th>\n","      <th>sharpness</th>\n","      <th>contrast</th>\n","      <th>colorful</th>\n","      <th>sat_1</th>\n","      <th>sat_2</th>\n","      <th>sat_3</th>\n","      <th>sat_4</th>\n","      <th>bright_1</th>\n","      <th>bright_2</th>\n","      <th>bright_3</th>\n","      <th>bright_4</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>71fdcaaf5cf2</td>\n","      <td>8.40</td>\n","      <td>Company</td>\n","      <td>0.37064</td>\n","      <td>Tech accessories</td>\n","      <td>For phones</td>\n","      <td>Troitsk</td>\n","      <td>Chelyabinsk region</td>\n","      <td>9ea984545052ffb02c8356c9f5460f58c03fef18507248...</td>\n","      <td>Продам СРОЧНО/\\nГарнитура - Динамики для телеф...</td>\n","      <td>Nokia MD - 8 (Original) Black Edition</td>\n","      <td>3442810</td>\n","      <td>473.496</td>\n","      <td>Ural</td>\n","      <td>723</td>\n","      <td>1</td>\n","      <td>Electronics</td>\n","      <td>nokia md original black edition</td>\n","      <td>продать гарнитура динамика китай оригинал подк...</td>\n","      <td>15.0</td>\n","      <td>25230.0</td>\n","      <td>12.847392</td>\n","      <td>8.585103</td>\n","      <td>1.0</td>\n","      <td>768.0</td>\n","      <td>9.108203e+00</td>\n","      <td>84.392410</td>\n","      <td>106.948092</td>\n","      <td>248.0</td>\n","      <td>46.0</td>\n","      <td>3.0</td>\n","      <td>0.390625</td>\n","      <td>4.0</td>\n","      <td>0.130208</td>\n","      <td>6.0</td>\n","      <td>72.0</td>\n","      <td>5.075440e+01</td>\n","      <td>1.000000e-10</td>\n","      <td>7.0</td>\n","      <td>84.344297</td>\n","      <td>447.085297</td>\n","      <td>2.835441e-01</td>\n","      <td>4.926688e+01</td>\n","      <td>6.414276e+01</td>\n","      <td>4.672912e+01</td>\n","      <td>2.550000e+02</td>\n","      <td>1.000000e-10</td>\n","      <td>172.860168</td>\n","      <td>84.344297</td>\n","      <td>255.0</td>\n","      <td>1.600000e+01</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>e8fd28323e41</td>\n","      <td>1.56</td>\n","      <td>Company</td>\n","      <td>0.16155</td>\n","      <td>Tech accessories</td>\n","      <td>For phones</td>\n","      <td>Yekaterinburg</td>\n","      <td>Sverdlovsk region</td>\n","      <td>dc469d035945552a6fa5d03d5bba2a331a0a4213d72c14...</td>\n","      <td>Зарядное устройство подойдет для любого соврем...</td>\n","      <td>Автомобильное зарядное устройство USB 1А 2А</td>\n","      <td>4290067</td>\n","      <td>512.424</td>\n","      <td>Ural</td>\n","      <td>723</td>\n","      <td>1</td>\n","      <td>Electronics</td>\n","      <td>автомобильный зарядный устройство usb 1а 2а</td>\n","      <td>зарядный устройство подойти любой современный ...</td>\n","      <td>10.0</td>\n","      <td>3048.0</td>\n","      <td>1.554362</td>\n","      <td>0.629171</td>\n","      <td>1.0</td>\n","      <td>768.0</td>\n","      <td>2.145285e+01</td>\n","      <td>10.256714</td>\n","      <td>47.129392</td>\n","      <td>255.0</td>\n","      <td>258.0</td>\n","      <td>11.0</td>\n","      <td>0.224813</td>\n","      <td>8.0</td>\n","      <td>0.086466</td>\n","      <td>10.0</td>\n","      <td>6.0</td>\n","      <td>3.128357e+01</td>\n","      <td>5.200000e+01</td>\n","      <td>52.0</td>\n","      <td>55.358098</td>\n","      <td>1009.471802</td>\n","      <td>1.757504e-01</td>\n","      <td>2.467434e+01</td>\n","      <td>8.681744e+01</td>\n","      <td>5.582999e+01</td>\n","      <td>2.550000e+02</td>\n","      <td>1.000000e-10</td>\n","      <td>76.904053</td>\n","      <td>55.358098</td>\n","      <td>255.0</td>\n","      <td>1.000000e-10</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1e6ee485816e</td>\n","      <td>3.00</td>\n","      <td>Private</td>\n","      <td>0.21080</td>\n","      <td>Tech accessories</td>\n","      <td>For phones</td>\n","      <td>Taganrog</td>\n","      <td>Rostov region</td>\n","      <td>ef1760e9c2ae46ef0d652a9e5b74874f44bb0f351b0f3d...</td>\n","      <td>Отличный крепкий чехол для защиты от ударов, о...</td>\n","      <td>Чехол для meizu m5 note</td>\n","      <td>4181486</td>\n","      <td>416.484</td>\n","      <td>Southern</td>\n","      <td>481</td>\n","      <td>1</td>\n","      <td>Electronics</td>\n","      <td>чехол meizu m5 note</td>\n","      <td>отличный крепкий чехол защита удар отлично под...</td>\n","      <td>9.0</td>\n","      <td>7623.0</td>\n","      <td>3.886414</td>\n","      <td>3.204346</td>\n","      <td>1.0</td>\n","      <td>768.0</td>\n","      <td>2.000579e+01</td>\n","      <td>20.352631</td>\n","      <td>58.224206</td>\n","      <td>252.0</td>\n","      <td>246.0</td>\n","      <td>9.0</td>\n","      <td>0.215658</td>\n","      <td>7.0</td>\n","      <td>0.072225</td>\n","      <td>9.0</td>\n","      <td>14.0</td>\n","      <td>2.356021e+01</td>\n","      <td>5.000000e+01</td>\n","      <td>50.0</td>\n","      <td>66.923466</td>\n","      <td>597.361755</td>\n","      <td>1.481774e-01</td>\n","      <td>3.930506e+01</td>\n","      <td>7.638330e+01</td>\n","      <td>5.142935e+01</td>\n","      <td>2.550000e+02</td>\n","      <td>4.000000e+00</td>\n","      <td>112.497375</td>\n","      <td>66.923466</td>\n","      <td>253.0</td>\n","      <td>4.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>d7fbb29cf0d3</td>\n","      <td>12.00</td>\n","      <td>Private</td>\n","      <td>0.33973</td>\n","      <td>Tech accessories</td>\n","      <td>For phones</td>\n","      <td>Rostov-on-Don</td>\n","      <td>Rostov region</td>\n","      <td>9961c32699847a15c6894465bffcc547bea6a71fdc673d...</td>\n","      <td>Продам дисплей на смартфон IPhone 5/\\nТорг/\\nП...</td>\n","      <td>Дисплей на смартфон iPhone 5</td>\n","      <td>4181486</td>\n","      <td>416.484</td>\n","      <td>Southern</td>\n","      <td>481</td>\n","      <td>1</td>\n","      <td>Electronics</td>\n","      <td>дисплей смартфон iphone</td>\n","      <td>продать дисплей смартфон iphone покупка штука ...</td>\n","      <td>7.0</td>\n","      <td>12150.0</td>\n","      <td>6.532288</td>\n","      <td>4.623413</td>\n","      <td>1.0</td>\n","      <td>768.0</td>\n","      <td>1.870960e+01</td>\n","      <td>34.364883</td>\n","      <td>71.984107</td>\n","      <td>255.0</td>\n","      <td>161.0</td>\n","      <td>18.0</td>\n","      <td>0.125122</td>\n","      <td>5.0</td>\n","      <td>0.130208</td>\n","      <td>13.0</td>\n","      <td>134.0</td>\n","      <td>4.360568e+01</td>\n","      <td>7.500000e+01</td>\n","      <td>75.0</td>\n","      <td>77.619411</td>\n","      <td>928.586884</td>\n","      <td>2.436071e-01</td>\n","      <td>4.958498e+01</td>\n","      <td>1.214074e+02</td>\n","      <td>6.410168e+01</td>\n","      <td>2.550000e+02</td>\n","      <td>1.000000e-10</td>\n","      <td>126.476013</td>\n","      <td>77.619411</td>\n","      <td>255.0</td>\n","      <td>1.000000e+00</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>bb231d205c71</td>\n","      <td>3.48</td>\n","      <td>Company</td>\n","      <td>0.26355</td>\n","      <td>Tech accessories</td>\n","      <td>For phones</td>\n","      <td>Ufa</td>\n","      <td>Bashkortostan</td>\n","      <td>46b9cebbe689c1dce3d15b2168f62da7b97b8ea94c3d33...</td>\n","      <td>Аккумулятор для Samsung Galaxy Star Plus Duos ...</td>\n","      <td>Аккумулятор Samsung Galaxy Star Plus Duos GT-S...</td>\n","      <td>4013786</td>\n","      <td>464.628</td>\n","      <td>Volga</td>\n","      <td>479</td>\n","      <td>1</td>\n","      <td>Electronics</td>\n","      <td>аккумулятор samsung galaxy star plus duos</td>\n","      <td>аккумулятор samsung galaxy star plus duos ориг...</td>\n","      <td>35.0</td>\n","      <td>22239.0</td>\n","      <td>11.317444</td>\n","      <td>10.498556</td>\n","      <td>2.0</td>\n","      <td>514.0</td>\n","      <td>1.000000e-10</td>\n","      <td>84.088272</td>\n","      <td>117.577701</td>\n","      <td>255.0</td>\n","      <td>334.0</td>\n","      <td>3.0</td>\n","      <td>0.390625</td>\n","      <td>1.0</td>\n","      <td>0.260417</td>\n","      <td>2.0</td>\n","      <td>256.0</td>\n","      <td>1.000000e-10</td>\n","      <td>1.000000e-10</td>\n","      <td>1.0</td>\n","      <td>79.226982</td>\n","      <td>1747.868958</td>\n","      <td>1.000000e-10</td>\n","      <td>1.000000e-10</td>\n","      <td>1.000000e-10</td>\n","      <td>1.000000e-10</td>\n","      <td>1.000000e-10</td>\n","      <td>1.000000e-10</td>\n","      <td>196.297852</td>\n","      <td>79.226982</td>\n","      <td>255.0</td>\n","      <td>2.500000e+01</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-db8b9209-e1eb-4d8e-9b13-9d076e67dc74')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-db8b9209-e1eb-4d8e-9b13-9d076e67dc74 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-db8b9209-e1eb-4d8e-9b13-9d076e67dc74');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["   Unnamed: 0  llave            id  ...   bright_2 bright_3      bright_4\n","0           0      0  71fdcaaf5cf2  ...  84.344297    255.0  1.600000e+01\n","1           1      1  e8fd28323e41  ...  55.358098    255.0  1.000000e-10\n","2           2      2  1e6ee485816e  ...  66.923466    253.0  4.000000e+00\n","3           3      3  d7fbb29cf0d3  ...  77.619411    255.0  1.000000e+00\n","4           4      4  bb231d205c71  ...  79.226982    255.0  2.500000e+01\n","\n","[5 rows x 53 columns]"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["fig = plt.figure(figsize=(10,6))\n","fig.set_size_inches(4, 3)\n","plt1 = sns.distplot(df[df[\"sold\"]==0].n_segments, hist=True, label=\"not sold\")\n","plt2 = sns.distplot(df[df[\"sold\"]==1].n_segments, hist=True, label=\"sold\")\n","plt.legend(labels=['not sold','sold'])\n","plt.title(\"Titulo\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":330},"id":"RSRyfQGhgDwP","executionInfo":{"status":"ok","timestamp":1645534691893,"user_tz":-60,"elapsed":7699,"user":{"displayName":"miguel Garcia","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08308211240568740600"}},"outputId":"8407369d-f66f-4152-983e-70ae124b2ad3"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/seaborn/distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n","  warnings.warn(msg, FutureWarning)\n","/usr/local/lib/python3.7/dist-packages/seaborn/distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n","  warnings.warn(msg, FutureWarning)\n"]},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 288x216 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["r = \"/content/drive/MyDrive/TFM Big Data & BA/Propuestas/Proyecto Final/2 - Text Mining/df_textm.csv\""],"metadata":{"id":"V0jGdJ8nqkKX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df = pd.read_csv(r)\n"],"metadata":{"id":"-HdC2j-hqy_D"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df1 = df[df[\"Descripcion\"].isna() == False]"],"metadata":{"id":"JRCQulnHrBQy"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df1[\"char_len\"] = df1[\"Descripcion\"].apply(lambda x: len(x))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"A5f2wZ0-q4F3","executionInfo":{"status":"ok","timestamp":1643993958667,"user_tz":-60,"elapsed":1111,"user":{"displayName":"miguel Garcia","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08308211240568740600"}},"outputId":"f796a494-18b4-4a04-dd97-09efd11019b8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \"\"\"Entry point for launching an IPython kernel.\n"]}]},{"cell_type":"code","source":["fig = plt.figure(figsize=(10,6))\n","fig.set_size_inches(4, 3)\n","plt1 = sns.distplot(df1[df1[\"sold\"]==0].price, hist=True, label=\"not sold\")\n","plt2 = sns.distplot(df1[df1[\"sold\"]==1].price, hist=True, label=\"sold\")\n","plt.legend(labels=['not sold','sold'])\n","plt.title(\"Descripción\")\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":493},"id":"Kq9p0EwxrRN4","executionInfo":{"status":"ok","timestamp":1644066186107,"user_tz":-60,"elapsed":10626,"user":{"displayName":"miguel Garcia","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08308211240568740600"}},"outputId":"2d139ca8-d9ac-48cf-9e77-a6fc96b24de0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/seaborn/distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n","  warnings.warn(msg, FutureWarning)\n","/usr/local/lib/python3.7/dist-packages/seaborn/distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n","  warnings.warn(msg, FutureWarning)\n"]},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 720x432 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["df2 = df[df[\"Titulo\"].isna() == False]"],"metadata":{"id":"eufs4yazrnbP"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df2[\"char_len\"] = df2[\"Titulo\"].apply(lambda x: len(x))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Zhigifqxr08E","executionInfo":{"status":"ok","timestamp":1643994127736,"user_tz":-60,"elapsed":911,"user":{"displayName":"miguel Garcia","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08308211240568740600"}},"outputId":"d1a50f31-dca9-4a61-acda-c9c05c252baf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  \"\"\"Entry point for launching an IPython kernel.\n"]}]},{"cell_type":"code","source":["\n","fig = plt.figure(figsize=(10,6))\n","fig.set_size_inches(4, 3)\n","plt1 = sns.distplot(df2[df2[\"sold\"]==0].char_len, hist=True, label=\"not sold\")\n","plt2 = sns.distplot(df2[df2[\"sold\"]==1].char_len, hist=True, label=\"sold\")\n","plt.legend(labels=['not sold','sold'])\n","plt.title(\"Titulo\")\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":331},"id":"ZBu1j4Lfr03l","executionInfo":{"status":"ok","timestamp":1643995105891,"user_tz":-60,"elapsed":6048,"user":{"displayName":"miguel Garcia","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"08308211240568740600"}},"outputId":"87de42cc-fbad-474d-d331-9c7809f04b48"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/seaborn/distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n","  warnings.warn(msg, FutureWarning)\n","/usr/local/lib/python3.7/dist-packages/seaborn/distributions.py:2619: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n","  warnings.warn(msg, FutureWarning)\n"]},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 288x216 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]}]}